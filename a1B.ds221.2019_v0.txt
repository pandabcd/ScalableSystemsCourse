===========================================
DS221: INTRODUCTION TO SCALABLE SYSTEMS
===========================================
ASSIGNMENT 1
POINTS: 150
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-----------------------
PART B
POSTED: 5 SEP, 2019
DUE DATE: 16 SEP, 2019, 11:59PM
-----------------------


-----------------------
BINARY TREE [75 points]
-----------------------

a) In this assignment, you will provide multiple implementations of a binary tree data structure for performing insertions and for finding an item, and evaluate its space and time complexity. Specifically, you will implement the binary tree as a regular binary tree and a binary search tree, and using a linked and array implementations. You will implement these in BinTreeImpl.cpp with class names: ArrayBinTree, LinkedBinTree, ArrayBinSearchTree and LinkedBinSearchTree.  These will implement the IBinTree interface defined in IBinTree.h.	[30 points]


b) As part of BTRunner.cpp, pre-fetch the key and the value data items from a given data input file into a key array and a value array. (This is done so that the disk I/O time does not interfere with the "compute time" for the insertion.) Insert these key-value items in same order into one of the four binary tree implementations.  Report the average, minimum, maximum and total time for the insertions, and memory taken. 
Similarly, pre-fetch keys from a given query input file into an array, and search for the item in the binary tree implementation. Add the returned values to a pre-defined array and finally write the array to an output file once all searches have completed. Maintain the order of the values to be the same as the order of the query keys.  Report the average, minimum, maximum and total time for the insertions. [15 points]


The signature of BTRunner should be: 
BTRunner [-abt|lbt|abst|lbst] -data datafile.tsv -query querykey.txt -output outvals.txt

Exactly two lines of console output should be printed:

<tree-type>,<data-file-name>,<query-file-name>,<count-of-items-inserted>,<average-insertion-time>,<minimum-insertion-time>, <maximum-insertion-time>,<total-insertion-time>,<total-memory-allocated-in-bytes>
<tree-type>,<data-file-name>,<query-file-name>,<count-of-items-queried>,<average-query-time>,<minimum-query-time>, <maximum-query-time>,<total-query-time>


c) Perform insert and lookup operations on the four tree implementations for different input sizes (10^4, 10^5, 10^6, ...) and key distributions. Compare the empirical performance with the analytical time complexity. Discuss your results. Provide a detailed report with plots and analysis. [30 points]


-----------------------
Submission Instructions
-----------------------
1) Code outline for IBinTree.h and BinTreeImpl.cpp is provided. Make changes to BinTreeImpl. You should provide the additional BTRunner.cpp file. Make sure your code is well documented. 5% of weightage goes to following good coding practices (indenting, comments, validations, etc.)

2) In addition, a Makefile and 2 test cases (small-data.tsv, small-query.txt, medium-data.tsv, medium-query.txt) are given. These test cases will be different from the ones which will be used while correcting your assignments and you are expected to run your code on other sample data of your own.

3) You should compile your BTRunner.cpp using the given Makefile. You should use the target "make bt" to compile this assignment. Do not change the Makefile. 

4) You will make a folder which has the same name as your turing cluster account, say, cdsstudent. The folder should contain the following files with the exact same names:

cdsstudent/
	1. BTRunner.cpp
	2. BinTreeImpl.cpp
	3. IBinTree.h - Don't make any changes. Copy it as it is provided.
	4. Makefile - Don't make any changes. Copy it as it is provided.
	5. BTRunner.o - Compiled output executable for reference. Note that your cpp file will be compiled from scratch using the Makefile, during evaluation.
    6. cdsstudent.pdf - A PDF report containing the analysis. You should submit a single report for both parts of the assignment. Replace cdsstudent with your user name on the turing cluster.

6) Tar and gzip your folder with the name cdsstudent.tar.gz, and email it to Yogesh Simmhan (simmhan@iisc.ac.in) and Siddharth Jaiswal (siddharthj@iisc.ac.in) by 11:59 pm on 16th September. You will receive an acknowledgment on 17th September.